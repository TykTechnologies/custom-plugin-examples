// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coprocess_return_overrides.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Coprocess {

  /// <summary>Holder for reflection information generated from coprocess_return_overrides.proto</summary>
  public static partial class CoprocessReturnOverridesReflection {

    #region Descriptor
    /// <summary>File descriptor for coprocess_return_overrides.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoprocessReturnOverridesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBjb3Byb2Nlc3NfcmV0dXJuX292ZXJyaWRlcy5wcm90bxIJY29wcm9jZXNz",
            "IkAKD1JldHVybk92ZXJyaWRlcxIVCg1yZXNwb25zZV9jb2RlGAEgASgFEhYK",
            "DnJlc3BvbnNlX2Vycm9yGAIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Coprocess.ReturnOverrides), global::Coprocess.ReturnOverrides.Parser, new[]{ "ResponseCode", "ResponseError" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReturnOverrides : pb::IMessage<ReturnOverrides> {
    private static readonly pb::MessageParser<ReturnOverrides> _parser = new pb::MessageParser<ReturnOverrides>(() => new ReturnOverrides());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReturnOverrides> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coprocess.CoprocessReturnOverridesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnOverrides() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnOverrides(ReturnOverrides other) : this() {
      responseCode_ = other.responseCode_;
      responseError_ = other.responseError_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnOverrides Clone() {
      return new ReturnOverrides(this);
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 1;
    private int responseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    /// <summary>Field number for the "response_error" field.</summary>
    public const int ResponseErrorFieldNumber = 2;
    private string responseError_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseError {
      get { return responseError_; }
      set {
        responseError_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReturnOverrides);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReturnOverrides other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseCode != other.ResponseCode) return false;
      if (ResponseError != other.ResponseError) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseCode != 0) hash ^= ResponseCode.GetHashCode();
      if (ResponseError.Length != 0) hash ^= ResponseError.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResponseCode);
      }
      if (ResponseError.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseError);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseCode);
      }
      if (ResponseError.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseError);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReturnOverrides other) {
      if (other == null) {
        return;
      }
      if (other.ResponseCode != 0) {
        ResponseCode = other.ResponseCode;
      }
      if (other.ResponseError.Length != 0) {
        ResponseError = other.ResponseError;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ResponseCode = input.ReadInt32();
            break;
          }
          case 18: {
            ResponseError = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

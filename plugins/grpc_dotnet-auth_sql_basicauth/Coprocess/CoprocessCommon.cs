// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coprocess_common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Coprocess {

  /// <summary>Holder for reflection information generated from coprocess_common.proto</summary>
  public static partial class CoprocessCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for coprocess_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoprocessCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZjb3Byb2Nlc3NfY29tbW9uLnByb3RvEgljb3Byb2Nlc3MiHAoLU3RyaW5n",
            "U2xpY2USDQoFaXRlbXMYASADKAkqTwoISG9va1R5cGUSCwoHVW5rbm93bhAA",
            "EgcKA1ByZRABEggKBFBvc3QQAhIPCgtQb3N0S2V5QXV0aBADEhIKDkN1c3Rv",
            "bUtleUNoZWNrEARiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Coprocess.HookType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Coprocess.StringSlice), global::Coprocess.StringSlice.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum HookType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Pre")] Pre = 1,
    [pbr::OriginalName("Post")] Post = 2,
    [pbr::OriginalName("PostKeyAuth")] PostKeyAuth = 3,
    [pbr::OriginalName("CustomKeyCheck")] CustomKeyCheck = 4,
  }

  #endregion

  #region Messages
  public sealed partial class StringSlice : pb::IMessage<StringSlice> {
    private static readonly pb::MessageParser<StringSlice> _parser = new pb::MessageParser<StringSlice>(() => new StringSlice());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringSlice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coprocess.CoprocessCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSlice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSlice(StringSlice other) : this() {
      items_ = other.items_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSlice Clone() {
      return new StringSlice(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_items_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> items_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringSlice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringSlice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringSlice other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
